// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/tasks": {
            "get": {
                "description": "Retrieves a paginated list of tasks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tasks",
                        "schema": {
                            "$ref": "#/definitions/skillsrock-test-task_internal_dto.GetTasksResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http_v1_handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No tasks found",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http_v1_handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Unknown error occurred",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http_v1_handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new task",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Create a new task",
                "parameters": [
                    {
                        "description": "Task",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/skillsrock-test-task_internal_dto.CreateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/skillsrock-test-task_internal_dto.CreateTaskResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http_v1_handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Uknown error occured while creating the task",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http_v1_handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "description": "Retrieves a task by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get a task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task details",
                        "schema": {
                            "$ref": "#/definitions/skillsrock-test-task_internal_dto.GetTaskByIDResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid task ID",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http_v1_handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http_v1_handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Unknown error occurred",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http_v1_handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a task's data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Update a task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task payload",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/skillsrock-test-task_internal_dto.UpdateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input or task ID",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http_v1_handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http_v1_handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Unknown error occurred",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http_v1_handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a task by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Delete a task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid task ID",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http_v1_handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http_v1_handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Unknown error occurred",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http_v1_handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_delivery_http_v1_handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "skillsrock-test-task_internal_dto.CreateTaskRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "skillsrock-test-task_internal_dto.CreateTaskResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "skillsrock-test-task_internal_dto.GetTaskByIDResponse": {
            "type": "object",
            "properties": {
                "task": {
                    "$ref": "#/definitions/skillsrock-test-task_internal_models.Task"
                }
            }
        },
        "skillsrock-test-task_internal_dto.GetTasksResponse": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/skillsrock-test-task_internal_models.Task"
                    }
                }
            }
        },
        "skillsrock-test-task_internal_dto.UpdateTaskRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "skillsrock-test-task_internal_models.Task": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "SkillsRock Test Task",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
